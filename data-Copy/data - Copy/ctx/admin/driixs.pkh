rem
rem Copyright (c) 2002, 2018, Oracle and/or its affiliates. 
rem All rights reserved.
rem
rem    NAME
rem      driixs.pkh - DR Internal IndeX Set management
rem    DESCRIPTION
rem      This package contains internal code to create, manage, and drop
rem      index sets
rem
rem    NOTES
rem 
rem    BEGIN SQL_FILE_METADATA
rem      SQL_SOURCE_FILE: ctx_src_2/src/dr/admin/driixs.pkh
rem      SQL_SHIPPED_FILE: ctx/admin/driixs.pkh
rem      SQL_PHASE: DRIIXS_PKH
rem      SQL_STARTUP_MODE: NORMAL
rem      SQL_IGNORABLE_ERRORS: NONE
rem      SQL_CALLING_FILE: ctx/admin/ctxpkh.sql
rem    END SQL_FILE_METADATA
rem
rem    MODIFIED    (MM/DD/YY)
Rem     snetrava   06/14/18  - Bug 28102835: NONE LOG PRAGMA
rem    surman       01/23/15 - 20411134: Add SQL metadata tags
rem    surman       03/15/13 - 16473661: Common start and end scripts
rem    hsarkar      06/15/11 - Logical Standby Support
rem    surman       12/09/08 - 7540290: binary_integer to number
rem    surman       09/09/03 - 3101316: Add drop_user_index_sets 
rem    gkaminag     10/01/02 - security phase 3
rem    gkaminag     08/19/02 - gkaminag_security_phase2_020620
rem    gkaminag     07/22/02  - 
rem    gkaminag     07/02/02 -  creation

@@?/rdbms/admin/sqlsessstart.sql

create or replace package driixs as

PRAGMA SUPPLEMENTAL_LOG_DATA(default, NONE);

/*-------------------- create_index_set  ---------------------------*/

PROCEDURE create_index_set(
  set_name     in    varchar2,
  preference_implicit_commit in boolean
);

/*------------------------------ add_index -------------------------*/

PROCEDURE add_index(
  set_name       in    varchar2,
  column_list    in    varchar2,
  storage_clause in    varchar2 default null,
  preference_implicit_commit in boolean
);

/*-------------------- remove_index ---------------------------*/

PROCEDURE remove_index(
  set_name       in    varchar2, 
  column_list    in    varchar2,
  preference_implicit_commit in boolean
);

/*-------------------- drop_index_set  ---------------------------*/

PROCEDURE drop_index_set(
  set_name     in    varchar2
);

/*---------------------- drop_user_index_sets ----------------------*/
PROCEDURE drop_user_index_sets(
  user_name in varchar2 := null
);

/*------------------------ copy_index_set ------------------------------*/

function copy_index_set(
  p_idx_id     in  number, 
  p_indexset   in  varchar2,
  p_rcount     out number
) 
return dr_def.pref_rec;

/*----------------------- GetIndexIndexSet --- -------------------------*/
/* get index set from already-existing index */

PROCEDURE GetIndexIndexSet(
  p_idx_id    in  number,
  o_ixx       in out nocopy dr_def.ixx_tab
);

/*----------------------- GetIndexIXSColumns -----------------------------*/
/* get index set columns from already-existing index */

PROCEDURE GetIndexIXSColumns(
  p_idx_id    in  number,
  o_cols      in out nocopy dr_def.ixc_tab
);

end driixs;
/

@?/rdbms/admin/sqlsessend.sql
